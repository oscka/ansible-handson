---
- name: pre install 
  import_tasks: pre-install.yml

- name: "pip 설치"
  apt: 
    name: python3-pip   
  become: true  
  tags: 
  - pip
  - tool-basic
  
- name: install ansible server module pre-requisites
  pip:
    name:
      - openshift
      - pyyaml
      - kubernetes 
      - docker
      - docker-compose
  tags: 
    - ansible-module
    - tool-basic

    
- name: "docker 설치"
  shell: |  
    curl -fsSL https://get.docker.com/ | sudo sh 
    sudo usermod -a -G docker {{USER_NAME}}
  args:
    chdir: "{{ INSTALL_DOWN_ROOT }}/down/"
 
  tags: 
    - docker
    

- name: Start docker 
  service:
    name: docker
    state: restarted
  become: true
  tags: 
    - docker-restart
    - docker
    
- name: reset ssh connection to allow user changes to affect 'current login user'
  meta: reset_connection
  tags: 
    - docker-restart
    - docker
    
- name: docker check  
  shell: |
    docker ps 
  register: output
  tags: 
    - docker-restart

     

#--[output]--
- debug:
    var: output
  tags: 
    - docker-restart
    

- name: "k3d cli 설치"
  shell: |
    curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG={{K3D_TAG_VER}} bash
    echo "============= k3d version ==============="
    k3d version
  register: output
  tags: 
    - k3d-cli
    
- debug:
    var: output
  tags: 
    - k3d-cli
    

- name: "kubectl 설치"
  shell: |
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  args:
    chdir: "{{ INSTALL_DOWN_ROOT }}/down/"
 
  tags: 
    - kubectl
    - tool-basic

- name: kubectl alias =  k
  lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    line: |
      alias k=kubectl 
    mode: 0644
  tags: 
    - kubectl
    - tool-basic
    
    

- name: "docker-compose 설치"
  shell: |
    sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose 
    sudo chmod +x /usr/local/bin/docker-compose 
  args:
    chdir: "{{ INSTALL_DOWN_ROOT }}/down/"

  tags: 
    - docker-compose 
    - docker
    

- name: k9s 설치
  shell: |   
    curl -sL https://github.com/derailed/k9s/releases/download/{{K9S_VERSION}}/k9s_Linux_x86_64.tar.gz | sudo tar xfz - -C /usr/local/bin k9s
  args:
    chdir: "{{ INSTALL_DOWN_ROOT }}/down/"

  tags: 
    - k9s 
    - tool-basic

- name: argocd-cli 설치 
  shell: |
    sudo curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
    sudo chmod +x /usr/local/bin/argocd
  args:
    chdir: "{{ INSTALL_DOWN_ROOT }}/down/"
  tags: 
    - argocd-cli 
    - tool-basic

- name: helm3 설치
  shell: |
    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  args:
    chdir: "{{ INSTALL_DOWN_ROOT }}/down/"

  tags: 
    - helm3 
    - tool-basic
    
    

- name: kustomize 설치
  shell: |
    curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
  args:
    chdir: "{{ INSTALL_DOWN_ROOT }}/down/"
  tags: 
    - kustomize 
    

###### [post]
- name: post install 
  import_tasks: post-install.yml





