---
############## k3s ##################### 

# K3S는 IOT를 위한 Light한 쿠버네티스 : CLI는 별도로 없고 sh로 바로 받아서 실행함
# 개발, 테스트용으로는 사용에 무리가 없음
# traefik이 디폴트 ingress controller이나 nginx를 쓰기 위해 제외함
- name: "[ubuntu] k3s master 설치 k8s_k3s_ver={{K3S_VERSION}}"
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{K3S_VERSION}} sh -s - --write-kubeconfig-mode 644 {{K3S_OPTIONS}}
    sleep 10
    mkdir -p ~/.kube
    cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
  register: output
  tags: 
    - k3s 
  when: ansible_distribution == 'Ubuntu'

# DEBUG 출력을 위해 task마다 넣어야 함, TAG가 없으면 출력되지 않음
- debug:
    var: output
  tags: 
    - k3s

- name: waiting for pod status Ready
  shell: |
    sleep 10
    kubectl wait pod --timeout=-1s --for=condition=Ready -l '!job-name' -n kube-system
  tags: 
    - k3s

- name: "k3s fetch remote kubeconfig"
  ansible.builtin.fetch:
    src: "/etc/rancher/k3s/k3s.yaml"
    dest: "{{LOCAL_USER_HOME}}/.kube/k8s/kubeconfig"
    flat: yes
  tags: 
    - k3s-config-fetch
    - k3s
  when: ansible_distribution == 'Ubuntu'

# local_action은 원격이 아니고 로컬에서 실행되는 task
# var을 통해 mac,ubuntu에 따라 조금 다른 명령이 실행됨
- name: "kubeconfig remote.ip replace"
  local_action: shell
    {{ command.SED_REPLACE_COMMAND }}
  register: output
  tags: 
    - k3s-config-sed
    - k3s
  when: ansible_distribution == 'Ubuntu'

- debug:
    var: output
  tags: 
    - k3s-config-sed
    - k3s